/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@-forma-1-1-name: 'Forma 1-1';
@-forma-1-1-x: 95px;
@-forma-1-1-y: 135px;
@-forma-1-1-offset-x: -95px;
@-forma-1-1-offset-y: -135px;
@-forma-1-1-width: 80px;
@-forma-1-1-height: 72px;
@-forma-1-1-total-width: 372px;
@-forma-1-1-total-height: 283px;
@-forma-1-1-image: '../img/sprite/sprite.png';
@-forma-1-1: 95px 135px -95px -135px 80px 72px 372px 283px '../img/sprite/sprite.png' 'Forma 1-1';
@-forma-1-2-name: 'Forma 1-2';
@-forma-1-2-x: 0px;
@-forma-1-2-y: 135px;
@-forma-1-2-offset-x: 0px;
@-forma-1-2-offset-y: -135px;
@-forma-1-2-width: 80px;
@-forma-1-2-height: 80px;
@-forma-1-2-total-width: 372px;
@-forma-1-2-total-height: 283px;
@-forma-1-2-image: '../img/sprite/sprite.png';
@-forma-1-2: 0px 135px 0px -135px 80px 80px 372px 283px '../img/sprite/sprite.png' 'Forma 1-2';
@-forma-1-name: 'Forma 1';
@-forma-1-x: 230px;
@-forma-1-y: 0px;
@-forma-1-offset-x: -230px;
@-forma-1-offset-y: 0px;
@-forma-1-width: 66px;
@-forma-1-height: 80px;
@-forma-1-total-width: 372px;
@-forma-1-total-height: 283px;
@-forma-1-image: '../img/sprite/sprite.png';
@-forma-1: 230px 0px -230px 0px 66px 80px 372px 283px '../img/sprite/sprite.png' 'Forma 1';
@-shape-1-1-name: 'Shape 1-1';
@-shape-1-1-x: 0px;
@-shape-1-1-y: 230px;
@-shape-1-1-offset-x: 0px;
@-shape-1-1-offset-y: -230px;
@-shape-1-1-width: 80px;
@-shape-1-1-height: 53px;
@-shape-1-1-total-width: 372px;
@-shape-1-1-total-height: 283px;
@-shape-1-1-image: '../img/sprite/sprite.png';
@-shape-1-1: 0px 230px 0px -230px 80px 53px 372px 283px '../img/sprite/sprite.png' 'Shape 1-1';
@-shape-1-name: 'Shape 1';
@-shape-1-x: 135px;
@-shape-1-y: 0px;
@-shape-1-offset-x: -135px;
@-shape-1-offset-y: 0px;
@-shape-1-width: 80px;
@-shape-1-height: 80px;
@-shape-1-total-width: 372px;
@-shape-1-total-height: 283px;
@-shape-1-image: '../img/sprite/sprite.png';
@-shape-1: 135px 0px -135px 0px 80px 80px 372px 283px '../img/sprite/sprite.png' 'Shape 1';
@arrow-name: 'arrow';
@arrow-x: 311px;
@arrow-y: 225px;
@arrow-offset-x: -311px;
@arrow-offset-y: -225px;
@arrow-width: 50px;
@arrow-height: 10px;
@arrow-total-width: 372px;
@arrow-total-height: 283px;
@arrow-image: '../img/sprite/sprite.png';
@arrow: 311px 225px -311px -225px 50px 10px 372px 283px '../img/sprite/sprite.png' 'arrow';
@pink-success-name: 'pink-success';
@pink-success-x: 0px;
@pink-success-y: 0px;
@pink-success-offset-x: 0px;
@pink-success-offset-y: 0px;
@pink-success-width: 120px;
@pink-success-height: 120px;
@pink-success-total-width: 372px;
@pink-success-total-height: 283px;
@pink-success-image: '../img/sprite/sprite.png';
@pink-success: 0px 0px 0px 0px 120px 120px 372px 283px '../img/sprite/sprite.png' 'pink-success';
@price-arrow-left-name: 'price-arrow-left';
@price-arrow-left-x: 311px;
@price-arrow-left-y: 150px;
@price-arrow-left-offset-x: -311px;
@price-arrow-left-offset-y: -150px;
@price-arrow-left-width: 30px;
@price-arrow-left-height: 60px;
@price-arrow-left-total-width: 372px;
@price-arrow-left-total-height: 283px;
@price-arrow-left-image: '../img/sprite/sprite.png';
@price-arrow-left: 311px 150px -311px -150px 30px 60px 372px 283px '../img/sprite/sprite.png' 'price-arrow-left';
@price-arrow-right-name: 'price-arrow-right';
@price-arrow-right-x: 311px;
@price-arrow-right-y: 75px;
@price-arrow-right-offset-x: -311px;
@price-arrow-right-offset-y: -75px;
@price-arrow-right-width: 30px;
@price-arrow-right-height: 60px;
@price-arrow-right-total-width: 372px;
@price-arrow-right-total-height: 283px;
@price-arrow-right-image: '../img/sprite/sprite.png';
@price-arrow-right: 311px 75px -311px -75px 30px 60px 372px 283px '../img/sprite/sprite.png' 'price-arrow-right';
@review-next-name: 'review-next';
@review-next-x: 230px;
@review-next-y: 95px;
@review-next-offset-x: -230px;
@review-next-offset-y: -95px;
@review-next-width: 61px;
@review-next-height: 60px;
@review-next-total-width: 372px;
@review-next-total-height: 283px;
@review-next-image: '../img/sprite/sprite.png';
@review-next: 230px 95px -230px -95px 61px 60px 372px 283px '../img/sprite/sprite.png' 'review-next';
@review-prev-name: 'review-prev';
@review-prev-x: 311px;
@review-prev-y: 0px;
@review-prev-offset-x: -311px;
@review-prev-offset-y: 0px;
@review-prev-width: 61px;
@review-prev-height: 60px;
@review-prev-total-width: 372px;
@review-prev-total-height: 283px;
@review-prev-image: '../img/sprite/sprite.png';
@review-prev: 311px 0px -311px 0px 61px 60px 372px 283px '../img/sprite/sprite.png' 'review-prev';
@spritesheet-width: 372px;
@spritesheet-height: 283px;
@spritesheet-image: '../img/sprite/sprite.png';
@spritesheet-sprites: @-forma-1-1 @-forma-1-2 @-forma-1 @-shape-1-1 @-shape-1 @arrow @pink-success @price-arrow-left @price-arrow-right @review-next @review-prev;
@spritesheet: 372px 283px '../img/sprite/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
